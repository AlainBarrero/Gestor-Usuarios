/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.alain.monetizacion.model.impl;

import com.alain.monetizacion.model.SubsConfiguration;
import com.alain.monetizacion.model.SubsConfigurationModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SubsConfiguration service. Represents a row in the &quot;MT_SubsConfiguration&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.alain.monetizacion.model.SubsConfigurationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SubsConfigurationImpl}.
 * </p>
 *
 * @author Alain
 * @see SubsConfigurationImpl
 * @see com.alain.monetizacion.model.SubsConfiguration
 * @see com.alain.monetizacion.model.SubsConfigurationModel
 * @generated
 */
public class SubsConfigurationModelImpl extends BaseModelImpl<SubsConfiguration>
	implements SubsConfigurationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a subs configuration model instance should use the {@link com.alain.monetizacion.model.SubsConfiguration} interface instead.
	 */
	public static final String TABLE_NAME = "MT_SubsConfiguration";
	public static final Object[][] TABLE_COLUMNS = {
			{ "configurationId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "description", Types.VARCHAR },
			{ "amount", Types.DOUBLE },
			{ "cycle", Types.VARCHAR },
			{ "time_", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table MT_SubsConfiguration (configurationId LONG not null primary key,groupId LONG,description VARCHAR(75) null,amount DOUBLE,cycle VARCHAR(75) null,time_ INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table MT_SubsConfiguration";
	public static final String ORDER_BY_JPQL = " ORDER BY subsConfiguration.configurationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY MT_SubsConfiguration.configurationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.alain.monetizacion.model.SubsConfiguration"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.alain.monetizacion.model.SubsConfiguration"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.alain.monetizacion.model.SubsConfiguration"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long CONFIGURATIONID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.alain.monetizacion.model.SubsConfiguration"));

	public SubsConfigurationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _configurationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setConfigurationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _configurationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SubsConfiguration.class;
	}

	@Override
	public String getModelClassName() {
		return SubsConfiguration.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("configurationId", getConfigurationId());
		attributes.put("groupId", getGroupId());
		attributes.put("description", getDescription());
		attributes.put("amount", getAmount());
		attributes.put("cycle", getCycle());
		attributes.put("time", getTime());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long configurationId = (Long)attributes.get("configurationId");

		if (configurationId != null) {
			setConfigurationId(configurationId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Double amount = (Double)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		String cycle = (String)attributes.get("cycle");

		if (cycle != null) {
			setCycle(cycle);
		}

		Integer time = (Integer)attributes.get("time");

		if (time != null) {
			setTime(time);
		}
	}

	@Override
	public long getConfigurationId() {
		return _configurationId;
	}

	@Override
	public void setConfigurationId(long configurationId) {
		_configurationId = configurationId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public double getAmount() {
		return _amount;
	}

	@Override
	public void setAmount(double amount) {
		_amount = amount;
	}

	@Override
	public String getCycle() {
		if (_cycle == null) {
			return StringPool.BLANK;
		}
		else {
			return _cycle;
		}
	}

	@Override
	public void setCycle(String cycle) {
		_cycle = cycle;
	}

	@Override
	public int getTime() {
		return _time;
	}

	@Override
	public void setTime(int time) {
		_time = time;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SubsConfiguration.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SubsConfiguration toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SubsConfiguration)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SubsConfigurationImpl subsConfigurationImpl = new SubsConfigurationImpl();

		subsConfigurationImpl.setConfigurationId(getConfigurationId());
		subsConfigurationImpl.setGroupId(getGroupId());
		subsConfigurationImpl.setDescription(getDescription());
		subsConfigurationImpl.setAmount(getAmount());
		subsConfigurationImpl.setCycle(getCycle());
		subsConfigurationImpl.setTime(getTime());

		subsConfigurationImpl.resetOriginalValues();

		return subsConfigurationImpl;
	}

	@Override
	public int compareTo(SubsConfiguration subsConfiguration) {
		long primaryKey = subsConfiguration.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SubsConfiguration)) {
			return false;
		}

		SubsConfiguration subsConfiguration = (SubsConfiguration)obj;

		long primaryKey = subsConfiguration.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SubsConfigurationModelImpl subsConfigurationModelImpl = this;

		subsConfigurationModelImpl._originalGroupId = subsConfigurationModelImpl._groupId;

		subsConfigurationModelImpl._setOriginalGroupId = false;

		subsConfigurationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SubsConfiguration> toCacheModel() {
		SubsConfigurationCacheModel subsConfigurationCacheModel = new SubsConfigurationCacheModel();

		subsConfigurationCacheModel.configurationId = getConfigurationId();

		subsConfigurationCacheModel.groupId = getGroupId();

		subsConfigurationCacheModel.description = getDescription();

		String description = subsConfigurationCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			subsConfigurationCacheModel.description = null;
		}

		subsConfigurationCacheModel.amount = getAmount();

		subsConfigurationCacheModel.cycle = getCycle();

		String cycle = subsConfigurationCacheModel.cycle;

		if ((cycle != null) && (cycle.length() == 0)) {
			subsConfigurationCacheModel.cycle = null;
		}

		subsConfigurationCacheModel.time = getTime();

		return subsConfigurationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{configurationId=");
		sb.append(getConfigurationId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", cycle=");
		sb.append(getCycle());
		sb.append(", time=");
		sb.append(getTime());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.alain.monetizacion.model.SubsConfiguration");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>configurationId</column-name><column-value><![CDATA[");
		sb.append(getConfigurationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cycle</column-name><column-value><![CDATA[");
		sb.append(getCycle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>time</column-name><column-value><![CDATA[");
		sb.append(getTime());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SubsConfiguration.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SubsConfiguration.class
		};
	private long _configurationId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private String _description;
	private double _amount;
	private String _cycle;
	private int _time;
	private long _columnBitmask;
	private SubsConfiguration _escapedModel;
}